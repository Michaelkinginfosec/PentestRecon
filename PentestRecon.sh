#!/bin/bash
# Author: MICHAELKING

bold=$(tput bold)
underline=$(tput smul)
dim=$(tput dim)
strickthrough=$(tput smxx)
blink=$(tput blink)
reverse=$(tput rev)
hidden=$(tput invis)
normal=$(tput sgr0)

black=$(tput setaf 0)
red=$(tput setaf 1)
green=$(tput setaf 2)
orange=$(tput setaf 3)
blue=$(tput setaf 4)
purple=$(tput setaf 5)
aqua=$(tput setaf 6)
gray=$(tput setaf 7)
darkgray=$(tput setaf 8)
lightred=$(tput setaf 9)
lightgreen=$(tput setaf 10)
lightyellow=$(tput setaf 11)
lightblue=$(tput setaf 12)
lightpurple=$(tput setaf 13)
lightaqua=$(tput setaf 14)
white=$(tput setaf 15)


echo "${blue}       _____        _______        _   _____                         ${normal}"
echo "${blue}      |  __ \      |__   __|      | | |  __ \                        ${normal}"
echo "${blue}      | |__) |__ _ __ | | ___  ___| |_| |__) |___  ___ ___  _ __     ${normal}"
echo "${blue}      |  ___/ _ \ '_ \| |/ _ \/ __| __|  _  // _ \/ __/ _ \| '_ \    ${normal}"
echo "${blue}      | |  |  __/ | | | |  __/\__ \ |_| | \ \  __/ (_| (_) | | | |   ${normal}"
echo "${blue}      |_|   \___|_| |_|_|\___||___/\__|_|  \_\___|\___\___/|_| |_|   ${normal}"
echo ""                                                       

echo   "${green}      DEVELOPED BY @OSUNDE GOODLUCK MICHAEL         ${normal}"
printf "${red}${bold}\n -----  DISCLAIMER: The Developer assume no liability and are not -----\n${normal}"
printf "${red}${bold} -----   responsible for any misuse or damage caused by PentestRecon -----\n${normal}"
printf "${red}${bold} -----  This tool is made for ethical purposes only. -----\n\n${normal}"
printf "\n"
printf "\n"
echo "" 

read -p " Enter <DOMAIN OR IP> Of Target : " $DOMAIN

ping -c5 $DOMAIN >> /dev/null

if [ $? -eq 0 ]
then 
    echo -en "${red} ----- STARTING RECONNAISSANCE ON -----  ${normal}: $DOMAIN\n"
    printf "\n"
else
    echo "invalid url"
    exit
fi
function Reconnaissance(){
    echo -en "\e[31m  ----- RUNNING THE HOST UTIILITY AGAINST TARGET ----- \n\n\e[0m"
    host $DOMAIN 
    if [ $? -eq 0 ] 
    then
        echo " "
    else
        echo " the host tool failed"
    fi
    echo -en "\e[31m ----- RUNNING THE NSLOOKUP UTILITY AGAINST TARGET ----- \n\n\e[0m"
    nslookup $DOMAIN  
    if [ $? -eq 0 ] 
    then
        echo " "
    else
        echo " the nslookup tool failed"
    fi
    echo -en "\e[31m ----- RUNNING THE TRACEROUTE UTILITY AGAINST TARGET ----- \n\n\e[0m"
    traceroute $DOMAIN 
    if [ $? -eq 0 ] 
    then
        echo " "
    else
        echo " the traceroute tool failed"
    fi
    echo -en "\e[31m  ----- RUNNING THE DIG UTILITY AGAINST TARGET ----- \n\n\e[0m"
    dig $DOMAIN 
    if [ $? -eq 0 ] 
    then
        echo " "
    else
        echo " the dig tool failed"
    fi
    if ! command -v dnsrecon > /dev/null
    then
        read -p "dnsrecon is a dependency and it is not found would you like to install it: " installDnsrecon
        if [ $installDnsrecon  == 'Yes' ] || [ $installDnsrecon == "y" ] || [ $installDnsrecon == "Y" ]
        then
            sudo apt-get install dnsrecon > /dev/null
            if [ $? -eq 0 ] 
            then
                echo " install successful"
                dnsrecon -d $DOMAIN
            else
                echo " dnsrecon could not  bee installed on your system"
            fi
        elif [ $installDnsrecon  == 'No' ] || [ $installDnsrecon == "n" ] || [ $installDnsrecon == "N" ]
        then
            echo "goodbye"
        else
            sudo apt-get install dnsrecon /dev/null
            if [ $? -eq 0 ] 
            then
                echo " install successful"
                dnsrecon -d $DOMAIN
            else
                echo " dnsrecon could not  bee installed on your system"
            fi
        fi
    else
        echo -en "\e[31m  ----- RUNNING THE DNSRECON UTILITY AGAINST TARGET ----- \n\n\e[0m"
        dnsrecon -d $DOMAIN 
    fi
    echo -en "\e[31m  ----- RUNNING THE WAFW00F UTILITY AGAINT TARGET TO CHECK FOR WAF ----- \n\e[0m\n"
    if ! command -v wafw00f  > /dev/null
    then
        read -p  "wafw00f is a dependency and it is not found would you like to install it: " installwafw00f
        if [ $installwafw00f  == 'Yes' ] || [ $installwafw00f == "y" ] || [ $installwafw00f == "Y" ]
        then
            sudo apt-get install wafw00f > /dev/null
            if [ $? -eq 0 ] 
            then
                echo " install successful"
                wafw00f $DOMAIN
            else
                echo " wafw00f could not  bee installed on your system"
            fi
        elif [ $installwafw00f  == 'No' ] || [ $installwafw00f == "n" ] || [ $installwafw00f == "N" ]
        then
            echo "goodbye"
        else
            sudo apt-get install wafW00f > /dev/null
            if [ $? -eq 0 ] 
            then
                echo " install successful"
                wafw00f $DOMAIN
            else
                echo " wafw00f could not  bee installed on your system"
            fi
        fi
    else
        wafw00f $DOMAIN  
        if [ $? -eq 0 ] 
        then
            echo " "
        else
            echo " wafw00f tool failed"
        fi
    fi

    echo -en "\e[31m \n ----- RUNNING THE WHOIS UTILITY AGAINST TARGET ----- \n\n\e[0m\n"
    whois $DOMAIN 
    if [ $? -eq 0 ] 
    then
        echo " "
    else
        echo " the host tool failed"
    fi  
    echo -en "\e[31m \n ----- RUNNING THE WHATWEB UTILITY AGAINST TARGET ----- \n\n\e[0m\n"
    whatweb $DOMAIN 
    if [ $? -eq 0 ] 
    then
        echo " "
    else
        echo " the whatweb tool failed"
    fi 
    if ! command -v sublist3r > /dev/null
    then
        read -p "sublist3r is a dependency and it is not found would you like to install it: " installsublist3r
        if [ $installsublist3r  == 'Yes' ] || [ $installsublist3r == "y" ] || [ $installsublist3r == "Y" ]
        then
            sudo apt-get install sublist3r > /dev/null
            if [ $? -eq 0 ] 
            then
                echo " install successful"
                sublist3r -d $DOMAIN
            else
                echo " sublist3r could not  bee installed on your system"
            fi
        elif [ $installsublist3r  == 'No' ] || [ $installsublist3r == "n" ] || [ $installsublist3r == "N" ]
        then
            echo "goodbye"
        else
            sudo apt-get install sublist3r /dev/null
            if [ $? -eq 0 ] 
            then
                echo " install successful"
                sublist3r -d $DOMAIN 
            else
                echo "sublist3r could not  bee installed on your system"
            fi
        fi
    else
        echo -en "\e[31m \n ----- RUNNING THE SUBLIST3R UTILITY AGAINST TARGET ----- \n\n\e[0m\n"
        sublist3r -d $DOMAIN 
    fi
    echo -en "\e[31m \n ----- RUNNING THE theHARVESTER UTILITY AGAINST TARGET ----- \n\n\e[0m\n"
    theHarvester -d $DOMAIN -l 500 -b all 
    if [ $? -eq 0 ]
    then
        echo ""
    else
        echo "theHarvester not working \n"
    fi
    exit
}
Reconnaissance
